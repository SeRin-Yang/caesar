// Auto-generated by pgcl2heyvl from hyper.pgcl
//
// HeyVL file to show
//     5 * (n - x) >= ert[C](0)
// using k-induction with k = 1 and invariant = 5 * (n - x)
// for the pGCL program C:
//
//     nat x;
//     nat n;
//     nat r;
//     while ((x + 2) <= n) {
//         {
//             r := 0;
//         } [117/145] {
//             {
//                 r := 1;
//             } [27/28] {
//                 r := 2;
//             }
//         }
//         x := x + r;
//         tick(1);
//     }

@ert
coproc main(init_x: UInt, init_n: UInt, init_r: UInt) -> (x: UInt, n: UInt, r: UInt)
    pre 5 * (init_n - init_x)
    post 0
{
    var prob_choice: Bool
    x = init_x
    n = init_n
    r = init_r
    @invariant(5 * (n - x))
    while (x + 2) <= n {
        prob_choice = flip((117/145))
        if prob_choice {
            r = 0
        } else {
            prob_choice = flip((27/28))
            if prob_choice {
                r = 1
            } else {
                r = 2
            }
        }
        x = x + r
        tick 1
    }
}
