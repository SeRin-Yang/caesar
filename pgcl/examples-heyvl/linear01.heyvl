// Auto-generated by pgcl2heyvl from linear01.pgcl
//
// HeyVL file to show
//     0.6 * x >= ert[C](0)
// using k-induction with k = 1 and invariant = 0.6 * x
// for the pGCL program C:
//
//     nat x;
//     while (2 <= x) {
//         {
//             x := x - 1;
//         } [1/3] {
//             x := x - 2;
//         }
//         tick(1);
//     }

@ert
coproc main(init_x: UInt) -> (x: UInt)
    pre 0.6 * init_x
    post 0
{
    var prob_choice: Bool
    x = init_x
    @invariant(0.6 * x)
    while 2 <= x {
        prob_choice = flip((1/3))
        if prob_choice {
            x = x - 1
        } else {
            x = x - 2
        }
        tick 1
    }
}
