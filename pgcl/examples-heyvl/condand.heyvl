// Auto-generated by pgcl2heyvl from condand.pgcl
//
// HeyVL file to show
//     m + n >= ert[C](0)
// using k-induction with k = 1 and invariant = m + n
// for the pGCL program C:
//
//     nat n;
//     nat m;
//     while ((0 < n) & (0 < m)) {
//         {
//             n := n - 1;
//         } [1/2] {
//             m := m - 1;
//         }
//         tick(1);
//     }

coproc k_induction(init_n: UInt, init_m: UInt) -> (n: UInt, m: UInt)
    pre init_m + init_n
    post 0
{
    var prob_choice: Bool
    n = init_n
    m = init_m
    coassert m + n
    cohavoc m, n
    covalidate
    coassume m + n
    if (0 < n) && (0 < m) {
        prob_choice = flip((1/2))
        if prob_choice {
            n = n - 1
        } else {
            m = m - 1
        }
        tick 1
        assert m + n
        assume 0
    } else {}
}
