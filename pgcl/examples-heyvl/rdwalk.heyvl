// Auto-generated by pgcl2heyvl from rdwalk.pgcl
//
// HeyVL file to show
//     2 * ((n + 1) - x) >= ert[C](0)
// using k-induction with k = 1 and invariant = 2 * ((n + 1) - x)
// for the pGCL program C:
//
//     nat x;
//     nat n;
//     while (x < n) {
//         {
//             x := x + 2;
//         } [1/2] {
//             x := x - 1;
//         }
//         tick(1);
//     }

@ert
coproc main(init_x: UInt, init_n: UInt) -> (x: UInt, n: UInt)
    pre 2 * ((init_n + 1) - init_x)
    post 0
{
    var prob_choice: Bool
    x = init_x
    n = init_n
    @k_induction(1, 2 * ((n + 1) - x))
    while x < n {
        prob_choice = flip((1/2))
        if prob_choice {
            x = x + 2
        } else {
            x = x - 1
        }
        tick 1
    }
}
