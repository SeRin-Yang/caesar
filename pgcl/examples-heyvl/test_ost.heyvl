// Auto-generated by pgcl2heyvl from test_ost.pgcl
//
// HeyVL file to show that
//     b + [a] <= wp[C](b)
// using the Optional Stopping Theorem from Aiming Low is Harder paper with
// invariant = b + [a], c = 1 and
// past-invariant = 2 * [a] is used to show that C is PAST by showing
//      2 * [a] >= ert[C](0)
// for the pGCL program C:
//
//     bool a;
//     nat b;
//     nat k;
//     while (a) {
//         {
//             a := false;
//         } [0.5] {
//             b := b + 1;
//         }
//         k := k + 1;
//     }

proc main(init_a: Bool, init_b: UInt, init_k: UInt) -> (a: Bool, b: UInt, k: UInt)
{
    var prob_choice: Bool
    a = init_a
    b = init_b
    k = init_k
    @ost(b + [a], 2 * [a], 1, b)
    while a {
        prob_choice = flip(0.5)
        if prob_choice {
            a = false
        } else {
            b = b + 1
        }
        k = k + 1
    }
}
