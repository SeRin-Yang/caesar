// Auto-generated by pgcl2heyvl from esc_spline_ast.pgcl
//
// HeyVL file to show that C is almost-surely terminating
// using AST rule by McIver et al. (2018) with
// invariant = true, variant = x, probability function p(v) = 1 / (v + 1), decrease function d(v) = 1
// for the pGCL program C:
//
//     nat x;
//     while (0 < x) {
//         {
//             x := 0;
//         } [1 / (x + 1)] {
//             x := x + 1;
//         }
//     }

proc main(init_x: UInt) -> (x: UInt)
{
    var prob_choice: Bool
    x = init_x
    @ast(true, x, v, 1 / (v + 1), 1)
    while 0 < x {
        prob_choice = flip(1 / (x + 1))
        if prob_choice {
            x = 0
        } else {
            x = x + 1
        }
    }
}
