// RUN: @caesar @file

domain Exponentials {
    func ohfive_exp(exponent: UInt): EUReal

    axiom ohfive_exp_base ohfive_exp(0) == 1
    axiom ohfive_exp_step forall exponent: UInt. ohfive_exp(exponent + 1) == 0.5 * ohfive_exp(exponent)
}

domain List {
    func len(l: List): UInt
    func pop(l: List): List 

    axiom list_len forall l: List. len(pop(l)) == len(l) - 1
}

coproc lossy_list(init_l: List) -> (l: List)
    pre ?(len(init_l) == 1) ==> ([true] * 0.5)
    post 1
{
    l = init_l
    coassert ohfive_exp(len(l))
    cohavoc l
    cocompare ohfive_exp(len(l))
    if len(l) > 0 {
        var prob_choice: Bool = flip(0.5)
        if prob_choice {
            l = pop(l)
        } else {
            assert 0 // this is abort
        }
        coassert ohfive_exp(len(l))
        coassume ?(true)
    } else {}
}
